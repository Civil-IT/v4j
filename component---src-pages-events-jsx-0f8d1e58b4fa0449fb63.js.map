{"version":3,"file":"component---src-pages-events-jsx-0f8d1e58b4fa0449fb63.js","mappings":"iIA0BIA,GAAsB,E,QAAA,IAAQ,SAAgBC,EAAMC,EAAaC,GACnE,OAAOF,EAAKE,GAAKA,EAAID,EAAYC,MAGnC,O,oDC1BMC,EAAU,SAACC,GACf,OAAO,SAAC,IAAD,KAGTD,EAAQE,UANU,GAOlB","sources":["webpack://vision-for-justice/./node_modules/ramda/es/unless.js","webpack://vision-for-justice/./src/pages/events.jsx"],"sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import EventsPage from \"../components/EventsPage/EventsPage.jsx\";\r\n\r\nconst propTypes = {};\r\n\r\nconst AboutUs = (props) => {\r\n  return <EventsPage />;\r\n};\r\n\r\nAboutUs.propTypes = propTypes;\r\nexport default AboutUs;\r\n"],"names":["unless","pred","whenFalseFn","x","AboutUs","props","propTypes"],"sourceRoot":""}